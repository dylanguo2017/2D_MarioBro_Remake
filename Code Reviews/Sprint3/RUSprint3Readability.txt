Author: Rezeki Utomo
Date: 6/16/2017
Sprint#: 3
.cs file reviewed: MarioCollisionDetector.cs
author of cs file: Shiny Patel
# of minutes taken to complete the review: 45

Specific comments on readibility: 
	The code is not as readable as I had hoped for. The primary reason for this is methods such as SideX()
	or SideY() does not clearly states what side collides with what. Those method would change the value of
	String sideX and sideY by replacing them with right, left, up, or down. But it doesn't explicitly says
	that "right" for sideX means that the right side of the object collides with mario; hence mario's blocked
	side is actually the left one. Aside from that, everything else is pretty readable as myGame.marioState.right
	has a true or false equivalent which means the direction of the move is empty and mario could move in that
	direction.